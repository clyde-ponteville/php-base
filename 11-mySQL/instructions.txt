Pizzeria :

- pizza -> (id), name, price, image, size_id (lien avec la table Taille), 
- size -> (id), name, price
- user -> (id), name, firstname
- address -> (id), name, address, zip, city, phone, user_id (lien avec la table Utilisateur)
---------------- BONUS
- order -> (id), user_id, ordered_at, reference, address_id
- order_detail -> (id), pizza_name, pizza_price, size, quantity, order_id


liste des pizza à insérer:

INSERT INTO pizza (name, price, image) 
	VALUES ('Reine', 8, 'img/pizzas/reine.jpg'),
    	   ('Texan',10,'img/pizzas/texan.jpg'),
    	   ('4 fromages',9,'img/pizzas/4-fromages.jpg'),
           ('Végétarienne',11,'img/pizzas/vegetarienne.jpg'),
           ('Savoyarde',13,'img/pizzas/savoyarde.jpg'),
           ('Bolognaise',10,'img/pizzas/bolognaise.jpg'),
           ('Cannibale',10,'img/pizzas/cannibale.jpg');

-- Récup toutes les pizzas
SELECT * FROM pizza;

-- Récup les pizzas dont le prix est inférieur à 10
SELECT * FROM pizza WHERE price < 10;

-- Récup les pizzas qui n'ont pas d'images
SELECT * FROM pizza WHERE image is NULL;

-- Trier les pizzas de la plus cher à la moins cher
SELECT * FROM pizza ORDER BY price DESC;

-- Récup 3 pizzas dans un ordre aléa
SELECT * FROM pizza ORDER BY RAND() LIMIT 3;

-- Compter le nombre de pizza
SELECT COUNT(id) FROM pizza;

-- Récup la pizza la plus cher
SELECT name, price FROM pizza WHERE price = (SELECT MAX(price) FROM pizza);

-- Calculer la moyenne de prix des pizzas
SELECT AVG(price) FROM pizza;

-- pizza
SELECT pizza.name, pizza.price, size.name taille, size.price supplement, (pizza.price + size.price) AS total
FROM pizza_has_size
INNER JOIN pizza ON pizza.id = pizza_has_size.pizza_id
INNER JOIN size ON size.id = pizza_has_size.size_id
ORDER BY pizza.id, size.id ASC